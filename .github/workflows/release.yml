name: Release

on:
  push:
    tags:
      - v[0-9]+.*
    paths-ignore:
      - "docs/**"
      - "**.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**.md"

permissions:
  contents: write
  packages: write

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Lint
        run: |
          cargo clippy -- --no-deps
      - name: Test
        run: |
          cargo test
  build:
    needs:
      - check
    name: Cross build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        arch: [ "x86_64" ]
        target:
          - x86_64-unknown-linux-musl
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
        include:
          - target: x86_64-unknown-linux-musl
            name: falcon-x86_64-unknown-linux-musl.tar.gz
            os: ubuntu-latest
            bin: falcon
            cross: true
          - target: x86_64-pc-windows-msvc
            name: falcon-x86_64-pc-windows-msvc.zip
            os: windows-latest
            bin: falcon.exe
            cross: false
          - target: x86_64-apple-darwin
            name: falcon-x86_64-apple-darwin.tar.gz
            os: macOS-latest
            bin: falcon
            cross: false
    if: startswith(github.ref, 'refs/tags/v') # Only run on tag push
    steps:
      - uses: actions/checkout@v4
      - name: Install OpenSSL
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install pkg-config libssl-dev
      - name: Install OpenSSL
        if: matrix.os == 'macos-latest'
        run: brew install openssl@3

      # Native build
      - name: Install target
        if: matrix.cross == false
        run: rustup target add ${{ matrix.target }}

      - name: Build release
        if: matrix.cross == false
        run: cargo build --release --target ${{ matrix.target }}

      # Cross build
      - name: Install cross
        if: matrix.cross
        run: cargo install --version 0.2.5 cross

      - name: Build release
        if: matrix.cross
        run: cross build --release --target ${{ matrix.target }}  --no-default-features

      - name: Prepare build artifacts [windows]
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          strip ${{ matrix.bin }}
          7z a ${{ matrix.name }} ${{ matrix.bin }}
          cd -

      - name: Prepare build artifacts [linux]
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          strip ${{ matrix.bin }}
          tar zcvf ${{ matrix.name }} ${{ matrix.bin }}
          cd -

      - name: Upload build artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.name }}
          path: target/${{ matrix.target }}/release/${{ matrix.name }}

  release:
    needs:
      - build
    runs-on: ubuntu-latest
    if: startswith(github.ref, 'refs/tags/v') # Only run on tag push
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download artifacts linux-musl
        uses: actions/download-artifact@v1
        with:
          name: falcon-x86_64-unknown-linux-musl.tar.gz
          path: .
      - name: Download artifacts windows
        uses: actions/download-artifact@v1
        with:
          name: falcon-x86_64-pc-windows-msvc.zip
          path: .
      - name: Download artifacts apple-darwin
        uses: actions/download-artifact@v1
        with:
          name: falcon-x86_64-apple-darwin.tar.gz
          path: .
      - name: Create GitHub release ${{ matrix.target }}
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            falcon-x86_64-unknown-linux-musl.tar.gz
            falcon-x86_64-apple-darwin.tar.gz
            falcon-x86_64-pc-windows-msvc.zip